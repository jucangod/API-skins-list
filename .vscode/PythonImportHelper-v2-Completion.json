[
    {
        "label": "MongoClient",
        "importPath": "pymongo.mongo_client",
        "description": "pymongo.mongo_client",
        "isExtraImport": true,
        "detail": "pymongo.mongo_client",
        "documentation": {}
    },
    {
        "label": "ServerApi",
        "importPath": "pymongo.server_api",
        "description": "pymongo.server_api",
        "isExtraImport": true,
        "detail": "pymongo.server_api",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "champions_collection",
        "importPath": "config.config",
        "description": "config.config",
        "isExtraImport": true,
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "champions_router",
        "importPath": "routers.champions",
        "description": "routers.champions",
        "isExtraImport": true,
        "detail": "routers.champions",
        "documentation": {}
    },
    {
        "label": "uri",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "uri = \"mongodb+srv://jcespinozarodriguez:3sP0RtduIj7JM03G@skins-wish-list.dteyc.mongodb.net/?retryWrites=true&w=majority&appName=skins-wish-list\"\n# Create a new client and connect to the server\nclient = MongoClient(uri, server_api=ServerApi('1'))\ndb = client.skins_list\nchampions_collection = db['champions']\nskins_collection = db['skins']\n# Send a ping to confirm a successful connection\ntry:\n    client.admin.command('ping')\n    print(\"Pinged your deployment. You successfully connected to MongoDB!\")",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "client = MongoClient(uri, server_api=ServerApi('1'))\ndb = client.skins_list\nchampions_collection = db['champions']\nskins_collection = db['skins']\n# Send a ping to confirm a successful connection\ntry:\n    client.admin.command('ping')\n    print(\"Pinged your deployment. You successfully connected to MongoDB!\")\nexcept Exception as e:\n    print(e)",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "db",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "db = client.skins_list\nchampions_collection = db['champions']\nskins_collection = db['skins']\n# Send a ping to confirm a successful connection\ntry:\n    client.admin.command('ping')\n    print(\"Pinged your deployment. You successfully connected to MongoDB!\")\nexcept Exception as e:\n    print(e)",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "champions_collection",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "champions_collection = db['champions']\nskins_collection = db['skins']\n# Send a ping to confirm a successful connection\ntry:\n    client.admin.command('ping')\n    print(\"Pinged your deployment. You successfully connected to MongoDB!\")\nexcept Exception as e:\n    print(e)",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "skins_collection",
        "kind": 5,
        "importPath": "config.config",
        "description": "config.config",
        "peekOfCode": "skins_collection = db['skins']\n# Send a ping to confirm a successful connection\ntry:\n    client.admin.command('ping')\n    print(\"Pinged your deployment. You successfully connected to MongoDB!\")\nexcept Exception as e:\n    print(e)",
        "detail": "config.config",
        "documentation": {}
    },
    {
        "label": "get_champions",
        "kind": 2,
        "importPath": "routers.champions",
        "description": "routers.champions",
        "peekOfCode": "def get_champions():\n    champions = champions_collection.find()\n    return champions",
        "detail": "routers.champions",
        "documentation": {}
    },
    {
        "label": "champions_router",
        "kind": 5,
        "importPath": "routers.champions",
        "description": "routers.champions",
        "peekOfCode": "champions_router = APIRouter()\n@champions_router.get('/champions')\ndef get_champions():\n    champions = champions_collection.find()\n    return champions",
        "detail": "routers.champions",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\napp.include_router(champions_router)",
        "detail": "main",
        "documentation": {}
    }
]